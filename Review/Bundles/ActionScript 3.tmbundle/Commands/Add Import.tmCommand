<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby -wKU

require ENV['TM_BUNDLE_SUPPORT']+'/lib/package_completion.rb'

word   = ENV['TM_CURRENT_WORD']
doc    = STDIN.read.strip
import = find_package(word)

pkg = /^\s*package\s+([\w+\.]+)/
cls = /^\s*(public|final)\s+(final|public)?\s*\bclass\b/

pre, imps, post = [], [], []
a = pre
	
doc.split("\n").each do |line|
	a &lt;&lt; line
	if line =~ pkg
		pkg = nil
		a = imps
	elsif line =~ cls
		cls = nil
		a = post
	end
end

irgx = /#{import.gsub('.', '\.')}/
safe = 0
indent = ""

imps.each_with_index do |line,index|
	if line =~ irgx
		TextMate.exit_show_tool_tip("#{word} already imported")
	elsif line =~ /^\s*$/
		safe = index
	elsif line =~ /^(\s*)import\s+/
		indent = "	"
	end
end

imps[safe] = "#{imps[safe]}\n#{indent}import #{import};"

TextMate.exit_replace_document( pre.join("\n")+"\n"+imps.join("\n")+"\n"+post.join("\n"))
</string>
	<key>input</key>
	<string>document</string>
	<key>keyEquivalent</key>
	<string>@I</string>
	<key>name</key>
	<string>Import Class</string>
	<key>output</key>
	<string>discard</string>
	<key>scope</key>
	<string>source.actionscript.3 meta.package.actionscript.3 meta.class.actionscript.3</string>
	<key>uuid</key>
	<string>B42093AC-0F65-4760-856C-23E51A54CD84</string>
</dict>
</plist>
